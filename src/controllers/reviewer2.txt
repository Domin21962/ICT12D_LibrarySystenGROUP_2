**Library System Defense Reviewer**

### **I. System Overview**

- The Library System allows students to log in, register, search for books, and manage student information.
- Built using Java Swing for GUI, MySQL (XAMPP) for database management, and JDBC for database connectivity.
- Follows MVC architecture for better code organization.

### **II. System Features & Functionalities**

#### **1. Login System**

- Users enter **Student Number** and **Password** to access the system.
- Authentication is handled through `LoginController`.
- Uses JDBC to check credentials against the `users` table.
- Successful login redirects users to `MainForm`.
- Invalid credentials prompt an error message.
- `loginUser()` function verifies credentials via SQL query.

#### **2. Registration System**

- Users provide **Student Number**, **Email**, and **Password**.
- Password confirmation ensures matching passwords before submission.
- `RegisterController` checks if the **Student Number** already exists.
- If new, inserts user data into the `users` table.
- Redirects user to `LoginForm` upon successful registration.
- `registerUser()` function handles the database insertion.

#### **3. MainForm (Library Dashboard)**

- Displays available books and provides search functionality.
- Allows navigation to **Student Information**.
- Logout button redirects back to `LoginForm`.
- Implements a **search feature** using `searchBook()` to filter book records.
- Uses `BookController` to fetch book details from the database.

### **III. Database Structure**

#### **Users Table**

| Column          | Data Type | Description               |
| --------------- | --------- | ------------------------- |
| id              | INT (PK)  | Auto-incremented ID       |
| student\_number | VARCHAR   | Unique student identifier |
| email           | VARCHAR   | User email address        |
| password        | VARCHAR   | Encrypted password        |

#### **Books Table**

| Column  | Data Type | Description          |
| ------- | --------- | -------------------- |
| id      | INT (PK)  | Auto-incremented ID  |
| title   | VARCHAR   | Book title           |
| author  | VARCHAR   | Author name          |
| content | TEXT      | Book content/summary |

### **IV. Common Questions for Defense**

1. **What is the purpose of your Library System?**
   - The system aims to help students log in, search for books, and manage library records efficiently.
2. **How does the login process work?**
   - The system checks the **student number** and **password** in the database via JDBC. If valid, the user is redirected to the main page.
3. **What happens if a student enters an incorrect password?**
   - The system displays an error message and does not grant access.
4. **How is user data stored securely?**
   - Passwords should be encrypted using hashing techniques like `BCrypt` (currently plain text, but can be improved).
5. **What happens if a user tries to register with an existing student number?**
   - The system checks for duplicates and prevents registration if the student number already exists.
6. **How does the book search function work?**
   - The `searchBook()` method filters books based on a keyword entered by the user, using SQL `LIKE` queries.
7. **What improvements can be made to the system?**
   - Implement password encryption.
   - Add book borrowing and returning functionalities.
   - Improve the user interface with better responsiveness.

### **V. Troubleshooting & Debugging**

- **Login issues:** Check if the student number and password exist in the database.
- **Database connection errors:** Verify that MySQL is running and credentials are correct.
- **Registration errors:** Ensure student number is unique before inserting data.
- **Search issues:** Confirm the database contains book records and test SQL queries.

### **VI. Conclusion**

- The system successfully allows student authentication and book searching.
- Future improvements can include role-based access, enhanced security, and additional library functionalities.
- This system demonstrates basic CRUD operations and Java Swing GUI integration with MySQL.



